# Define the function "say_hello" so it prints "Hello!" when called.
def say_hello():
    print("Hello!")
# Call the function.
say_hello()
Hello!
# Define the function "say_something" so it prints whatever is passed as the variable when called.
def say_something(something):
    print(something)
# Call the function.
say_something("Hello World")
Hello World
Jane_says = "Hi, my name is Jane. I'm learning Python!"
say_something(Jane_says)
Hi, my name is Jane. I'm learning Python!
# Define a function that calculates the percentage of students that passed both 
# math and reading and returns the passing percentage when the function is called.

def passing_math_percent(pass_math_count, student_count):
    return pass_math_count / float(student_count) * 100
passing_math_count = 29370
total_student_count = 39170
# Call the function.
passing_math_percent(passing_math_count, total_student_count)
74.9808526933878
# A list of my grades.
my_grades = ['B', 'C', 'B' , 'D']
# Import pandas.
import pandas as pd
# Convert the my_grades to a Series
my_grades = pd.Series(my_grades)
my_grades
0    B
1    C
2    B
3    D
dtype: object
# Change the grades by one letter grade.
my_grades.map({'B': 'A', 'C': 'B', 'D': 'C'})
0    A
1    B
2    A
3    C
dtype: object
# Using the format() function.
my_grades = [92.34, 84.56, 86.78, 98.32]

for grade in my_grades:
    print("{:.0f}".format(grade))
92
85
87
98
# Convert the numerical grades to a Series.
my_grades = pd.Series([92.34, 84.56, 86.78, 78.32])
my_grades
0    92.34
1    84.56
2    86.78
3    78.32
dtype: float64
# Format the grades to the nearest whole number percent.
my_grades.map("{:.0f}".format)
0    92
1    85
2    87
3    78
dtype: object
 
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
/var/folders/2x/_6tfq41s2cv19sc29byqz0q40000gn/T/ipykernel_10468/3179920842.py in <module>
      1 # Format the "Total Students" to have the comma for a thousands separator.
----> 2 district_summary_df["Total Students"] = district_summary_df["Total Students"].map("{:,}".format)
      3 
      4 district_summary_df["Total Students"]

NameError: name 'district_summary_df' is not defined
 
